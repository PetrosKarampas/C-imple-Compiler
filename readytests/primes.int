0: begin_block mod _ _
1: / num div T_1
2: * div T_1 T_2
3: - num T_2 T_3
4: retv T_3 _ _
5: end_block mod _ _
6: begin_block isPrime _ _
7: / num 2 T_4
8: + T_4 1 T_5
9: := T_5 _ range
10: > num 1 12
11: jump _ _ 27
12: <= i range 14
13: jump _ _ 25
14: par num CV _
15: par i CV _
16: par T_6 RET _
17: call mod _ _
18: = mod 0 20
19: jump _ _ 22
20: retv 0 _ _
21: jump _ _ 22
22: + i 1 T_7
23: := T_7 _ i
24: jump _ _ 12
25: retv 1 _ _
26: jump _ _ 28
27: retv 1 _ _
28: end_block isPrime _ _
29: begin_block primes _ _
30: inp x _ _
31: par x CV _
32: par T_8 RET _
33: call isPrime _ _
34: = isPrime 1 36
35: jump _ _ 38
36: out 1 _ _
37: jump _ _ 39
38: out 0 _ _
39: halt _ _ _
40: end_block primes _ _
END!!!